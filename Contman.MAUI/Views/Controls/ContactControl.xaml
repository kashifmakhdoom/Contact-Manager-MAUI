<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:vm="clr-namespace:Contman.MAUI.ViewModels"
             x:DataType="vm:ContactViewModel"
             x:Class="Contman.MAUI.Views.Controls.ContactControl"
             x:Name="control">
    <ContentView.Resources>
        <Style x:Key="InvalidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Red" />
        </Style>
        <Style x:Key="ValidEntryStyle" TargetType="Entry">
            <Setter Property="TextColor" Value="Green" />
        </Style>
    </ContentView.Resources>
    <VerticalStackLayout Spacing="10" Margin="15, 10, 0, 0">
        <Frame Padding="10, 2, 10, 2">
            <HorizontalStackLayout>
                <Label Text="Name" VerticalOptions="Center" WidthRequest="60"/>
                <Entry VerticalOptions="Center" Text="{Binding Contact.Name}">
                    <Entry.Behaviors>
                        <toolkit:TextValidationBehavior 
                             x:Name="entryNameValidator"
                             InvalidStyle="{StaticResource InvalidEntryStyle}"  
                             ValidStyle="{StaticResource ValidEntryStyle}"
                             Flags="ValidateOnValueChanged"
                             MinimumLength="3"   
                             IsValid="{Binding IsNameProvided}"
                     />
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10, 2, 10, 2">
            <HorizontalStackLayout>
                <Label Text="Email" VerticalOptions="Center" WidthRequest="60"/>
                <Entry VerticalOptions="Center" Text="{Binding Contact.Email}">
                    <Entry.Behaviors>
                        <toolkit:EmailValidationBehavior
                          DecorationFlags="Trim,NullToEmpty"
                          Flags="ValidateOnValueChanged" 
                          toolkit:MultiValidationBehavior.Error="Email format is invalid!"
                          IsValid="{Binding IsEmailValid}"
                        />        
                        <!-- 
                            <toolkit:MultiValidationBehavior 
                                 x:Name="entryEmailValidator"
                                 InvalidStyle="{StaticResource InvalidEntryStyle}"  
                                 ValidStyle="{StaticResource ValidEntryStyle}"
                                 Flags="ValidateOnValueChanged">
                                    <toolkit:TextValidationBehavior
                                     Flags="ValidateOnAttaching,ValidateOnValueChanged" 
                                     toolkit:MultiValidationBehavior.Error="Email is required!"
                                     IsValid="{Binding IsEmailProvided}"
                                     />
                                <toolkit:EmailValidationBehavior
                                        DecorationFlags="Trim,NullToEmpty"
                                     Flags="ValidateOnValueChanged" 
                                     toolkit:MultiValidationBehavior.Error="Email format is invalid!"
                                     IsValid="{Binding IsEmailValid}"
                                     />
                            </toolkit:MultiValidationBehavior>
                        -->
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10, 2, 10, 2">
            <HorizontalStackLayout>
                <Label Text="Phone" VerticalOptions="Center" WidthRequest="60"/>
                <Entry VerticalOptions="Center" Text="{Binding Contact.Phone}" Keyboard="Numeric">
                    <Entry.Behaviors>
                        <toolkit:MaskedBehavior Mask="XXX-XXX-XXXXXXX" UnmaskedCharacter="-" />
                        <!--
                            <toolkit:NumericValidationBehavior 
                                 x:Name="entryPhoneValidator"
                                 InvalidStyle="{StaticResource InvalidEntryStyle}"  
                                 ValidStyle="{StaticResource ValidEntryStyle}"
                                 Flags="ValidateOnValueChanged"
                                 IsValid="{Binding IsPhoneProvided}"
                            />
                        -->
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10, 2, 10, 2">
            <HorizontalStackLayout>
                <Label Text="Address" VerticalOptions="Center" WidthRequest="60"/>
                <Entry VerticalOptions="Center" Text="{Binding Contact.Address}"/>
            </HorizontalStackLayout>
        </Frame>

        <Button Text="Save" Command="{Binding UpsertContactCommand}" />
        <Button Text="Cancel" Command="{Binding BackToContactListCommand}" />

    </VerticalStackLayout>
</ContentView>
